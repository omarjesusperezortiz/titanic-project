{"version":3,"file":"static/js/716.493f1ae8.chunk.js","mappings":"uPA+CMA,EAFiBC,EAEiBC,KAAI,YAC1C,MAAO,CACLC,OAFiD,EAANA,OAG3CC,IAHsD,EAAHA,IAInDC,SAJgE,EAARA,SAKxDC,IALqE,EAAHA,IAOtE,IAEMD,EAAW,YAAmB,IAAhBA,EAAQ,EAARA,SAClB,OAAoB,IAAbA,CACT,EACME,EAAc,SAAH,GACf,OAAoB,IADS,EAARF,QAEvB,EAIMG,EAAoBR,EAAiBS,QAAO,YAChD,OAAkB,IADuC,EAANN,MAErD,IACMO,EAAqBV,EAAiBS,QAAO,YACjD,OAAkB,IADwC,EAANN,MAEtD,IACMQ,EAAoBX,EAAiBS,QAAO,YAChD,OAAkB,IADuC,EAANN,MAErD,IAIMS,EAA4BJ,EAAkBC,OAAOJ,GACrDQ,EAA6BH,EAAmBD,OAAOJ,GACvDS,EAA4BH,EAAkBF,OAAOJ,GAErDU,EAA+BP,EAAkBC,OAAOF,GACxDS,EAAgCN,EAAmBD,OAAOF,GAC1DU,EAA+BN,EAAkBF,OAAOF,GAExDW,EAAO,CACX,CACEC,GAAI,cACJC,MAAOZ,EAAkBa,OACzBC,MAAO,eAET,CACEH,GAAI,eACJC,MAAOV,EAAmBW,OAC1BC,MAAO,gBAET,CACEH,GAAI,cACJC,MAAOT,EAAkBU,OACzBC,MAAO,gBAILC,EAAQ,CACZ,CACEJ,GAAI,cACJC,MAAOR,EAA0BS,OACjCC,MAAO,wBAET,CACEH,GAAI,eACJC,MAAOP,EAA2BQ,OAClCC,MAAO,yBAET,CACEH,GAAI,cACJC,MAAON,EAA0BO,OACjCC,MAAO,yBAILE,EAAQ,CACZ,CACEL,GAAI,cACJC,MAAOL,EAA6BM,OACpCC,MAAO,4BAET,CACEH,GAAI,eACJC,MAAOJ,EAA8BK,OACrCC,MAAO,6BAET,CACEH,GAAI,cACJC,MAAOH,EAA6BI,OACpCC,MAAO,6BAILG,EAAqB,SAAH,OAAMP,EAAI,EAAJA,KAAI,OAChC,SAAC,KAAgB,CACfA,KAAMA,EACNQ,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,YAAY,QACZC,OAAQ,CAAEC,OAAQ,YAClBC,YAAa,GACbC,WAAY,CACVC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAEzBC,sBAAuB,GACvBC,sBAAuB,GACvBC,qBAAsB,GACtBC,qBAAsB,GACtBC,yBAA0B,GAC1BC,mBAAoB,GACpBC,aAAa,UACb,EAwCJ,UAjCmB,WACjB,OAAgCC,EAAAA,EAAAA,UAAS,OAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAE5B,OACE,UAAC,KAAK,YACJ,UAAC,KAAW,YACV,SAAC,KAAI,WACH,+CAEF,SAAC,KAAI,WACH,SAAC,KAAY,UACV,CAAC,MAAO,YAAa,iBAAiB7C,KAAI,SAACkB,GAAK,OAC/C,SAAC,KAAO,CACN4B,MAAM,oBAENC,OAAQ7B,IAAU0B,EAClBI,QAAS,kBAAMH,EAAY3B,EAAM,EAAC,SAEjCA,GAJIA,EAKG,YAKlB,SAAC,KAAS,CAAC+B,MAAO,CAAEC,OAAQ,SAAU,UACpC,SAAC3B,EAAkB,CACjBP,KAAmB,QAAb4B,EAAqB5B,EAAoB,cAAb4B,EAA2BvB,EAAQC,QAK/E,C","sources":["views/infographics/Funnel.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { ResponsiveFunnel } from '@nivo/funnel'\nimport PropTypes from 'prop-types'\nimport { CCol, CCard, CCardHeader, CCardBody, CButtonGroup, CButton } from '@coreui/react'\nimport titanicData from '../../data/titanic'\n\n// ANTIGUA LOGICA\n// const titanicFirstClass = []\n// // const titanicSecondClass = []\n// // const titanicThirdClass = []\n// for (let i = 0; i < titanicData.length; i++) {\n//   if (titanicData[i].pclass === 1) {\n//     // titanicFirstClass.push(titanicData[i])\n//   } else if (titanicData[i].pclass === 2) {\n//     titanicSecondClass.push(titanicData[i])\n//   } else if (titanicData[i].pclass === 3) {\n//     titanicThirdClass.push(titanicData[i])\n//   }\n// }\n// // const titanicFirstClassSurvived = []\n// const titanicSecondClassSurvived = []\n// const titanicThirdClassSurvived = []\n// for (let i = 0; i < titanicData.length; i++) {\n//   if (titanicData[i].pclass === 1 && titanicData[i].survived === true) {\n//     // titanicFirstClassSurvived.push(titanicData[i])\n//   } else if (titanicData[i].pclass === 2 && titanicData[i].survived === true) {\n//     titanicSecondClassSurvived.push(titanicData[i])\n//   } else if (titanicData[i].pclass === 3 && titanicData[i].survived === true) {\n//     titanicThirdClassSurvived.push(titanicData[i])\n//   }\n// }\n\n// const titanicFirstClassNotSurvived = []\n// const titanicSecondClassNotSurvived = []\n// const titanicThirdClassNotSurvived = []\n// for (let i = 0; i < titanicData.length; i++) {\n//   if (titanicData[i].pclass === 1 && titanicData[i].survived === false) {\n//     titanicFirstClassNotSurvived.push(titanicData[i])\n//   } else if (titanicData[i].pclass === 2 && titanicData[i].survived === false) {\n//     titanicSecondClassNotSurvived.push(titanicData[i])\n//   } else if (titanicData[i].pclass === 3 && titanicData[i].survived === false) {\n//     titanicThirdClassNotSurvived.push(titanicData[i])\n//   }\n// }\n\nconst titanicDataRaw = titanicData\n\nconst titanicDataClean = titanicDataRaw.map(({ pclass, age, survived, sex }) => {\n  return {\n    pclass,\n    age,\n    survived,\n    sex,\n  }\n})\n\nconst survived = ({ survived }) => {\n  return survived === true\n}\nconst notSurvived = ({ survived }) => {\n  return survived === false\n}\n\n//By Class\n\nconst titanicFirstClass = titanicDataClean.filter(({ pclass }) => {\n  return pclass === 1\n})\nconst titanicSecondClass = titanicDataClean.filter(({ pclass }) => {\n  return pclass === 2\n})\nconst titanicThirdClass = titanicDataClean.filter(({ pclass }) => {\n  return pclass === 3\n})\n\n//By Class If Survived\n\nconst titanicFirstClassSurvived = titanicFirstClass.filter(survived)\nconst titanicSecondClassSurvived = titanicSecondClass.filter(survived)\nconst titanicThirdClassSurvived = titanicThirdClass.filter(survived)\n\nconst titanicFirstClassNotSurvived = titanicFirstClass.filter(notSurvived)\nconst titanicSecondClassNotSurvived = titanicSecondClass.filter(notSurvived)\nconst titanicThirdClassNotSurvived = titanicThirdClass.filter(notSurvived)\n\nconst data = [\n  {\n    id: 'first_class',\n    value: titanicFirstClass.length,\n    label: 'First Class',\n  },\n  {\n    id: 'second_class',\n    value: titanicSecondClass.length,\n    label: 'Second Class',\n  },\n  {\n    id: 'third_class',\n    value: titanicThirdClass.length,\n    label: 'Third Class',\n  },\n]\n\nconst data2 = [\n  {\n    id: 'first_class',\n    value: titanicFirstClassSurvived.length,\n    label: 'First Class Survived',\n  },\n  {\n    id: 'second_class',\n    value: titanicSecondClassSurvived.length,\n    label: 'Second Class Survived',\n  },\n  {\n    id: 'third_class',\n    value: titanicThirdClassSurvived.length,\n    label: 'Third Class Survived',\n  },\n]\n\nconst data3 = [\n  {\n    id: 'first_class',\n    value: titanicFirstClassNotSurvived.length,\n    label: 'First Class Not Survived',\n  },\n  {\n    id: 'second_class',\n    value: titanicSecondClassNotSurvived.length,\n    label: 'Second Class Not Survived',\n  },\n  {\n    id: 'third_class',\n    value: titanicThirdClassNotSurvived.length,\n    label: 'Third Class Not Survived',\n  },\n]\n\nconst MyResponsiveFunnel = ({ data }) => (\n  <ResponsiveFunnel\n    data={data}\n    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n    valueFormat=\">-.4s\"\n    colors={{ scheme: 'spectral' }}\n    borderWidth={20}\n    labelColor={{\n      from: 'color',\n      modifiers: [['darker', 3]],\n    }}\n    beforeSeparatorLength={50}\n    beforeSeparatorOffset={20}\n    afterSeparatorLength={50}\n    afterSeparatorOffset={20}\n    currentPartSizeExtension={10}\n    currentBorderWidth={40}\n    motionConfig=\"wobbly\"\n  />\n)\n\nMyResponsiveFunnel.propTypes = {\n  data: PropTypes.array.isRequired,\n}\n\nconst FunnelNivo = () => {\n  const [viewInfo, setViewInfo] = useState('All')\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCol>\n          <h1>Class Type Info</h1>\n        </CCol>\n        <CCol>\n          <CButtonGroup>\n            {['All', 'Survivors', 'Not Survivors'].map((value) => (\n              <CButton\n                color=\"outline-secondary\"\n                key={value}\n                active={value === viewInfo}\n                onClick={() => setViewInfo(value)}\n              >\n                {value}\n              </CButton>\n            ))}\n          </CButtonGroup>\n        </CCol>\n      </CCardHeader>\n      <CCardBody style={{ height: '500px' }}>\n        <MyResponsiveFunnel\n          data={viewInfo === 'All' ? data : viewInfo === 'Survivors' ? data2 : data3}\n        />\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default FunnelNivo\n"],"names":["titanicDataClean","titanicData","map","pclass","age","survived","sex","notSurvived","titanicFirstClass","filter","titanicSecondClass","titanicThirdClass","titanicFirstClassSurvived","titanicSecondClassSurvived","titanicThirdClassSurvived","titanicFirstClassNotSurvived","titanicSecondClassNotSurvived","titanicThirdClassNotSurvived","data","id","value","length","label","data2","data3","MyResponsiveFunnel","margin","top","right","bottom","left","valueFormat","colors","scheme","borderWidth","labelColor","from","modifiers","beforeSeparatorLength","beforeSeparatorOffset","afterSeparatorLength","afterSeparatorOffset","currentPartSizeExtension","currentBorderWidth","motionConfig","useState","viewInfo","setViewInfo","color","active","onClick","style","height"],"sourceRoot":""}