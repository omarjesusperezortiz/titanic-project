{"version":3,"file":"static/js/887.d098914c.chunk.js","mappings":"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","sources":["../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/@nivo/funnel/src/props.tsx","../node_modules/@nivo/funnel/src/PartTooltip.tsx","../node_modules/@nivo/funnel/src/hooks.ts","../node_modules/d3-shape/src/area.js","../node_modules/@nivo/funnel/src/Part.tsx","../node_modules/@nivo/funnel/src/Parts.tsx","../node_modules/@nivo/funnel/src/PartLabel.tsx","../node_modules/@nivo/funnel/src/PartLabels.tsx","../node_modules/@nivo/funnel/src/Separator.tsx","../node_modules/@nivo/funnel/src/Separators.tsx","../node_modules/@nivo/funnel/src/FunnelAnnotations.tsx","../node_modules/@nivo/funnel/src/Funnel.tsx","../node_modules/@nivo/funnel/src/ResponsiveFunnel.tsx"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","// @ts-ignore\nimport { MotionConfigProvider } from '@nivo/core'\nimport { FunnelLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['separators', 'parts', 'labels', 'annotations'] as FunnelLayerId[],\n\n    direction: 'vertical' as const,\n    interpolation: 'smooth' as const,\n    spacing: 0,\n    shapeBlending: 0.66,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 1,\n\n    borderWidth: 6,\n    borderColor: { from: 'color' },\n    borderOpacity: 0.66,\n\n    enableLabel: true,\n    labelColor: { theme: 'background' },\n\n    enableBeforeSeparators: true,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: true,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n\n    annotations: [],\n\n    isInteractive: true,\n    currentPartSizeExtension: 0,\n\n    role: 'img',\n\n    animate: MotionConfigProvider.defaultProps.animate,\n    motionConfig: MotionConfigProvider.defaultProps.config,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { FunnelDatum, FunnelPartWithHandlers } from './types'\n\nexport interface PartTooltipProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n}\n\nexport const PartTooltip = <D extends FunnelDatum>({ part }: PartTooltipProps<D>) => (\n    <BasicTooltip\n        id={part.data.label}\n        value={part.formattedValue}\n        color={part.color}\n        enableChip={true}\n    />\n)\n","import { createElement, useMemo, useState, MouseEvent } from 'react'\nimport { line, area, curveBasis, curveLinear } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTheme, useValueFormatter } from '@nivo/core'\nimport { useAnnotations } from '@nivo/annotations'\nimport { useTooltip, TooltipActionsContextData } from '@nivo/tooltip'\nimport { svgDefaultProps as defaults } from './props'\nimport { PartTooltip, PartTooltipProps } from './PartTooltip'\nimport {\n    FunnelDatum,\n    FunnelCommonProps,\n    FunnelDataProps,\n    FunnelPart,\n    SeparatorProps,\n    FunnelCustomLayerProps,\n    FunnelAreaGenerator,\n    FunnelAreaPoint,\n    FunnelBorderGenerator,\n    Position,\n} from './types'\n\nexport const computeShapeGenerators = <D extends FunnelDatum>(\n    interpolation: FunnelCommonProps<D>['interpolation'],\n    direction: FunnelCommonProps<D>['direction']\n): [FunnelAreaGenerator, FunnelBorderGenerator] => {\n    // area generator which is used to draw funnel chart parts\n    const areaGenerator: FunnelAreaGenerator = area<FunnelAreaPoint>()\n    if (direction === 'vertical') {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .x0(d => d.x0)\n            .x1(d => d.x1)\n            .y(d => d.y)\n    } else {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .y0(d => d.y0)\n            .y1(d => d.y1)\n            .x(d => d.x)\n    }\n\n    return [\n        areaGenerator,\n        // we're using a different line generator to draw borders, this way\n        // we we don't have borders joining each side of the parts.\n        // it's important to have an empty point when defining the points\n        // to be used along with this, otherwise we'll get a line between both sides.\n        line<Position | null>()\n            .defined(d => d !== null)\n            .x(d => d!.x)\n            .y(d => d!.y)\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n    ]\n}\n\ninterface CustomBandScale {\n    (index: number): number\n    bandwidth: number\n}\n\nexport const computeScales = <D extends FunnelDatum>({\n    data,\n    direction,\n    width,\n    height,\n    spacing,\n}: {\n    data: FunnelDataProps<D>['data']\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n}): [CustomBandScale, ScaleLinear<number, number>] => {\n    let bandScaleSize\n    let linearScaleSize\n    if (direction === 'vertical') {\n        bandScaleSize = height\n        linearScaleSize = width\n    } else {\n        bandScaleSize = width\n        linearScaleSize = height\n    }\n\n    const bandwidth = (bandScaleSize - spacing * (data.length - 1)) / data.length\n\n    // we're not using d3 band scale here to be able to get\n    // the actual paddingInner value in pixels, required to\n    // create centered separator lines between parts\n    const bandScale = (index: number) => spacing * index + bandwidth * index\n    bandScale.bandwidth = bandwidth\n\n    const allValues = data.map(d => d.value)\n\n    const linearScale = scaleLinear()\n        .domain([0, Math.max(...allValues)])\n        .range([0, linearScaleSize])\n\n    return [bandScale, linearScale]\n}\n\nexport const computeSeparators = <D extends FunnelDatum>({\n    parts,\n    direction,\n    width,\n    height,\n    spacing,\n    enableBeforeSeparators,\n    beforeSeparatorOffset,\n    enableAfterSeparators,\n    afterSeparatorOffset,\n}: {\n    parts: FunnelPart<D>[]\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n    enableBeforeSeparators: boolean\n    beforeSeparatorOffset: number\n    enableAfterSeparators: boolean\n    afterSeparatorOffset: number\n}) => {\n    const beforeSeparators: SeparatorProps[] = []\n    const afterSeparators: SeparatorProps[] = []\n    const lastPart = parts[parts.length - 1]\n\n    if (direction === 'vertical') {\n        parts.forEach(part => {\n            const y = part.y0 - spacing / 2\n\n            if (enableBeforeSeparators) {\n                beforeSeparators.push({\n                    partId: part.data.id,\n                    x0: 0,\n                    x1: part.x0 - beforeSeparatorOffset,\n                    y0: y,\n                    y1: y,\n                })\n            }\n            if (enableAfterSeparators) {\n                afterSeparators.push({\n                    partId: part.data.id,\n                    x0: part.x1 + afterSeparatorOffset,\n                    x1: width,\n                    y0: y,\n                    y1: y,\n                })\n            }\n        })\n\n        const y = lastPart.y1\n        if (enableBeforeSeparators) {\n            beforeSeparators.push({\n                ...beforeSeparators[beforeSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n        if (enableAfterSeparators) {\n            afterSeparators.push({\n                ...afterSeparators[afterSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n    } else if (direction === 'horizontal') {\n        parts.forEach(part => {\n            const x = part.x0 - spacing / 2\n\n            beforeSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: 0,\n                y1: part.y0 - beforeSeparatorOffset,\n            })\n            afterSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: part.y1 + afterSeparatorOffset,\n                y1: height,\n            })\n        })\n\n        const x = lastPart.x1\n        beforeSeparators.push({\n            ...beforeSeparators[beforeSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n        afterSeparators.push({\n            ...afterSeparators[afterSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n    }\n\n    return [beforeSeparators, afterSeparators]\n}\n\nexport const computePartsHandlers = <D extends FunnelDatum>({\n    parts,\n    setCurrentPartId,\n    isInteractive,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onClick,\n    showTooltipFromEvent,\n    hideTooltip,\n    tooltip = PartTooltip,\n}: {\n    parts: FunnelPart<D>[]\n    setCurrentPartId: (id: string | number | null) => void\n    isInteractive: FunnelCommonProps<D>['isInteractive']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onClick?: FunnelCommonProps<D>['onClick']\n    showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent']\n    hideTooltip: () => void\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    if (!isInteractive) return parts\n\n    return parts.map(part => {\n        const boundOnMouseEnter = (event: MouseEvent) => {\n            setCurrentPartId(part.data.id)\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseEnter !== undefined && onMouseEnter(part, event)\n        }\n\n        const boundOnMouseLeave = (event: MouseEvent) => {\n            setCurrentPartId(null)\n            hideTooltip()\n            onMouseLeave !== undefined && onMouseLeave(part, event)\n        }\n\n        const boundOnMouseMove = (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseMove !== undefined && onMouseMove(part, event)\n        }\n\n        const boundOnClick =\n            onClick !== undefined\n                ? (event: MouseEvent) => {\n                      onClick(part, event)\n                  }\n                : undefined\n\n        return {\n            ...part,\n            onMouseEnter: boundOnMouseEnter,\n            onMouseLeave: boundOnMouseLeave,\n            onMouseMove: boundOnMouseMove,\n            onClick: boundOnClick,\n        }\n    })\n}\n\n/**\n * Creates required layout to generate a funnel chart,\n * it uses almost the same parameters as the Funnel component.\n *\n * For purpose/constrains on the parameters, please have a look\n * at the component's props.\n */\nexport const useFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    direction = defaults.direction,\n    interpolation = defaults.interpolation,\n    spacing = defaults.spacing,\n    shapeBlending: rawShapeBlending = defaults.shapeBlending,\n    valueFormat,\n    colors = defaults.colors,\n    fillOpacity = defaults.fillOpacity,\n    borderWidth = defaults.borderWidth,\n    borderColor = defaults.borderColor,\n    borderOpacity = defaults.borderOpacity,\n    labelColor = defaults.labelColor,\n    enableBeforeSeparators = defaults.enableBeforeSeparators,\n    beforeSeparatorLength = defaults.beforeSeparatorLength,\n    beforeSeparatorOffset = defaults.beforeSeparatorOffset,\n    enableAfterSeparators = defaults.enableAfterSeparators,\n    afterSeparatorLength = defaults.afterSeparatorLength,\n    afterSeparatorOffset = defaults.afterSeparatorOffset,\n    isInteractive = defaults.isInteractive,\n    currentPartSizeExtension = defaults.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: {\n    data: FunnelDataProps<D>['data']\n    width: number\n    height: number\n    direction?: FunnelCommonProps<D>['direction']\n    interpolation?: FunnelCommonProps<D>['interpolation']\n    spacing?: FunnelCommonProps<D>['spacing']\n    shapeBlending?: FunnelCommonProps<D>['shapeBlending']\n    valueFormat?: FunnelCommonProps<D>['valueFormat']\n    colors?: FunnelCommonProps<D>['colors']\n    fillOpacity?: FunnelCommonProps<D>['fillOpacity']\n    borderWidth?: FunnelCommonProps<D>['borderWidth']\n    borderColor?: FunnelCommonProps<D>['borderColor']\n    borderOpacity?: FunnelCommonProps<D>['borderOpacity']\n    labelColor?: FunnelCommonProps<D>['labelColor']\n    enableBeforeSeparators?: FunnelCommonProps<D>['enableBeforeSeparators']\n    beforeSeparatorLength?: FunnelCommonProps<D>['beforeSeparatorLength']\n    beforeSeparatorOffset?: FunnelCommonProps<D>['beforeSeparatorOffset']\n    enableAfterSeparators?: FunnelCommonProps<D>['enableAfterSeparators']\n    afterSeparatorLength?: FunnelCommonProps<D>['afterSeparatorLength']\n    afterSeparatorOffset?: FunnelCommonProps<D>['afterSeparatorOffset']\n    isInteractive?: FunnelCommonProps<D>['isInteractive']\n    currentPartSizeExtension?: FunnelCommonProps<D>['currentPartSizeExtension']\n    currentBorderWidth?: FunnelCommonProps<D>['currentBorderWidth']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onClick?: FunnelCommonProps<D>['onClick']\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<D>(colors, 'id')\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelColor = useInheritedColor(labelColor, theme)\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const [areaGenerator, borderGenerator] = useMemo(\n        () => computeShapeGenerators<D>(interpolation, direction),\n        [interpolation, direction]\n    )\n\n    let innerWidth: number\n    let innerHeight: number\n    const paddingBefore = enableBeforeSeparators ? beforeSeparatorLength + beforeSeparatorOffset : 0\n    const paddingAfter = enableAfterSeparators ? afterSeparatorLength + afterSeparatorOffset : 0\n    if (direction === 'vertical') {\n        innerWidth = width - paddingBefore - paddingAfter\n        innerHeight = height\n    } else {\n        innerWidth = width\n        innerHeight = height - paddingBefore - paddingAfter\n    }\n\n    const [bandScale, linearScale] = useMemo(\n        () =>\n            computeScales<D>({\n                data,\n                direction,\n                width: innerWidth,\n                height: innerHeight,\n                spacing,\n            }),\n        [data, direction, innerWidth, innerHeight, spacing]\n    )\n\n    const [currentPartId, setCurrentPartId] = useState<string | number | null>(null)\n\n    const parts: FunnelPart<D>[] = useMemo(() => {\n        const enhancedParts = data.map((datum, index) => {\n            const isCurrent = datum.id === currentPartId\n\n            let partWidth\n            let partHeight\n            let y0, x0\n\n            if (direction === 'vertical') {\n                partWidth = linearScale(datum.value)\n                partHeight = bandScale.bandwidth\n                x0 = paddingBefore + (innerWidth - partWidth) * 0.5\n                y0 = bandScale(index)\n            } else {\n                partWidth = bandScale.bandwidth\n                partHeight = linearScale(datum.value)\n                x0 = bandScale(index)\n                y0 = paddingBefore + (innerHeight - partHeight) * 0.5\n            }\n\n            const x1 = x0 + partWidth\n            const x = x0 + partWidth * 0.5\n            const y1 = y0 + partHeight\n            const y = y0 + partHeight * 0.5\n\n            const part: FunnelPart<D> = {\n                data: datum,\n                width: partWidth,\n                height: partHeight,\n                color: getColor(datum),\n                fillOpacity,\n                borderWidth:\n                    isCurrent && currentBorderWidth !== undefined\n                        ? currentBorderWidth\n                        : borderWidth,\n                borderOpacity,\n                formattedValue: formatValue(datum.value),\n                isCurrent,\n                x,\n                x0,\n                x1,\n                y,\n                y0,\n                y1,\n                borderColor: '',\n                labelColor: '',\n                points: [],\n                areaPoints: [],\n                borderPoints: [],\n            }\n\n            part.borderColor = getBorderColor(part)\n            part.labelColor = getLabelColor(part)\n\n            return part\n        })\n\n        const shapeBlending = rawShapeBlending / 2\n\n        enhancedParts.forEach((part, index) => {\n            const nextPart = enhancedParts[index + 1]\n\n            if (direction === 'vertical') {\n                part.points.push({ x: part.x0, y: part.y0 })\n                part.points.push({ x: part.x1, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: nextPart.x1, y: part.y1 })\n                    part.points.push({ x: nextPart.x0, y: part.y1 })\n                } else {\n                    part.points.push({ x: part.points[1].x, y: part.y1 })\n                    part.points.push({ x: part.points[0].x, y: part.y1 })\n                }\n                if (part.isCurrent) {\n                    part.points[0].x -= currentPartSizeExtension\n                    part.points[1].x += currentPartSizeExtension\n                    part.points[2].x += currentPartSizeExtension\n                    part.points[3].x -= currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: 0,\n                        x0: part.points[0].x,\n                        x1: part.points[1].x,\n                        y: part.y0,\n                        y0: 0,\n                        y1: 0,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    y: part.y0 + part.height * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: 0,\n                    x0: part.points[3].x,\n                    x1: part.points[2].x,\n                    y: part.y1,\n                    y0: 0,\n                    y1: 0,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    y: part.y1 - part.height * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x0,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x1,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n            } else {\n                part.points.push({ x: part.x0, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: part.x1, y: nextPart.y0 })\n                    part.points.push({ x: part.x1, y: nextPart.y1 })\n                } else {\n                    part.points.push({ x: part.x1, y: part.y0 })\n                    part.points.push({ x: part.x1, y: part.y1 })\n                }\n                part.points.push({ x: part.x0, y: part.y1 })\n                if (part.isCurrent) {\n                    part.points[0].y -= currentPartSizeExtension\n                    part.points[1].y -= currentPartSizeExtension\n                    part.points[2].y += currentPartSizeExtension\n                    part.points[3].y += currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: part.x0,\n                        x0: 0,\n                        x1: 0,\n                        y: 0,\n                        y0: part.points[0].y,\n                        y1: part.points[3].y,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    x: part.x0 + part.width * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: part.x1,\n                    x0: 0,\n                    x1: 0,\n                    y: 0,\n                    y0: part.points[1].y,\n                    y1: part.points[2].y,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    x: part.x1 - part.width * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y0,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y1,\n                    })\n                })\n            }\n        })\n\n        return enhancedParts\n    }, [\n        data,\n        direction,\n        linearScale,\n        bandScale,\n        innerWidth,\n        innerHeight,\n        paddingBefore,\n        paddingAfter,\n        rawShapeBlending,\n        getColor,\n        formatValue,\n        getBorderColor,\n        getLabelColor,\n        currentPartId,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const partsWithHandlers = useMemo(\n        () =>\n            computePartsHandlers<D>({\n                parts,\n                setCurrentPartId,\n                isInteractive,\n                onMouseEnter,\n                onMouseLeave,\n                onMouseMove,\n                onClick,\n                showTooltipFromEvent,\n                hideTooltip,\n                tooltip,\n            }),\n        [\n            parts,\n            setCurrentPartId,\n            isInteractive,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseMove,\n            onClick,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const [beforeSeparators, afterSeparators] = useMemo(\n        () =>\n            computeSeparators({\n                parts,\n                direction,\n                width,\n                height,\n                spacing,\n                enableBeforeSeparators,\n                beforeSeparatorOffset,\n                enableAfterSeparators,\n                afterSeparatorOffset,\n            }),\n        [\n            parts,\n            direction,\n            width,\n            height,\n            spacing,\n            enableBeforeSeparators,\n            beforeSeparatorOffset,\n            enableAfterSeparators,\n            afterSeparatorOffset,\n        ]\n    )\n\n    const customLayerProps: FunnelCustomLayerProps<D> = useMemo(\n        () => ({\n            width,\n            height,\n            parts: partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        }),\n        [\n            width,\n            height,\n            partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        ]\n    )\n\n    return {\n        parts: partsWithHandlers,\n        areaGenerator,\n        borderGenerator,\n        beforeSeparators,\n        afterSeparators,\n        setCurrentPartId,\n        currentPartId,\n        customLayerProps,\n    }\n}\n\nexport const useFunnelAnnotations = <D extends FunnelDatum>(\n    parts: FunnelPart<D>[],\n    annotations: FunnelCommonProps<D>['annotations']\n) =>\n    useAnnotations<FunnelPart<D>>({\n        data: parts,\n        annotations,\n        getPosition: part => ({\n            x: part.x,\n            y: part.y,\n        }),\n        getDimensions: (part: FunnelPart<D>) => {\n            const width = part.width\n            const height = part.height\n\n            return { size: Math.max(width, height), width, height }\n        },\n    })\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport {\n    FunnelDatum,\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n} from './types'\n\nexport interface PartProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Part = <D extends FunnelDatum>({\n    part,\n    areaGenerator,\n    borderGenerator,\n}: PartProps<D>) => {\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedAreaPath = useAnimatedPath(areaGenerator(part.areaPoints) as string)\n    const animatedBorderPath = useAnimatedPath(borderGenerator(part.borderPoints) as string)\n    const animatedProps = useSpring({\n        areaColor: part.color,\n        borderWidth: part.borderWidth,\n        borderColor: part.borderColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {part.borderWidth > 0 && (\n                <animated.path\n                    d={animatedBorderPath}\n                    stroke={animatedProps.borderColor}\n                    strokeWidth={animatedProps.borderWidth}\n                    strokeOpacity={part.borderOpacity}\n                    fill=\"none\"\n                />\n            )}\n            <animated.path\n                d={animatedAreaPath}\n                fill={animatedProps.areaColor}\n                fillOpacity={part.fillOpacity}\n                onMouseEnter={part.onMouseEnter}\n                onMouseLeave={part.onMouseLeave}\n                onMouseMove={part.onMouseMove}\n                onClick={part.onClick}\n            />\n        </>\n    )\n}\n","import { Part } from './Part'\nimport {\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n    FunnelDatum,\n} from './types'\n\ninterface PartsProps<D extends FunnelDatum> {\n    parts: FunnelPartWithHandlers<D>[]\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Parts = <D extends FunnelDatum>({\n    parts,\n    areaGenerator,\n    borderGenerator,\n}: PartsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <Part<D>\n                key={part.data.id}\n                part={part}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelProps<D extends FunnelDatum> {\n    part: FunnelPart<D>\n}\n\nexport const PartLabel = <D extends FunnelDatum>({ part }: PartLabelProps<D>) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${part.x}, ${part.y})`,\n        color: part.labelColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {part.formattedValue}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { PartLabel } from './PartLabel'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n}\n\nexport const PartLabels = <D extends FunnelDatum>({ parts }: PartLabelsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <PartLabel key={part.data.id} part={part} />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorProps {\n    separator: SeparatorType\n}\n\nexport const Separator = ({ separator }: SeparatorProps) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x1: separator.x0,\n        x2: separator.x1,\n        y1: separator.y0,\n        y2: separator.y1,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.line\n            x1={animatedProps.x1}\n            x2={animatedProps.x2}\n            y1={animatedProps.y1}\n            y2={animatedProps.y2}\n            fill=\"none\"\n            {...(theme.grid.line as any)}\n        />\n    )\n}\n","import { Separator } from './Separator'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorsProps {\n    beforeSeparators: SeparatorType[]\n    afterSeparators: SeparatorType[]\n}\n\nexport const Separators = ({ beforeSeparators, afterSeparators }: SeparatorsProps) => (\n    <>\n        {beforeSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n        {afterSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n    </>\n)\n","import { Annotation } from '@nivo/annotations'\nimport { useFunnelAnnotations } from './hooks'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface FunnelAnnotationsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n    annotations: any[]\n}\n\nexport const FunnelAnnotations = <D extends FunnelDatum>({\n    parts,\n    annotations,\n}: FunnelAnnotationsProps<D>) => {\n    const boundAnnotations = useFunnelAnnotations<D>(parts, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { SvgWrapper, Container, useDimensions } from '@nivo/core'\nimport { svgDefaultProps } from './props'\nimport { useFunnel } from './hooks'\nimport { Parts } from './Parts'\nimport { PartLabels } from './PartLabels'\nimport { Separators } from './Separators'\nimport { FunnelAnnotations } from './FunnelAnnotations'\nimport { FunnelDatum, FunnelLayerId, FunnelSvgProps } from './types'\n\ntype InnerFunnelProps<D extends FunnelDatum> = Omit<\n    FunnelSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    direction = svgDefaultProps.direction,\n    interpolation = svgDefaultProps.interpolation,\n    spacing = svgDefaultProps.spacing,\n    shapeBlending = svgDefaultProps.shapeBlending,\n    valueFormat,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    borderOpacity = svgDefaultProps.borderOpacity,\n    enableLabel = svgDefaultProps.enableLabel,\n    labelColor = svgDefaultProps.labelColor,\n    enableBeforeSeparators = svgDefaultProps.enableBeforeSeparators,\n    beforeSeparatorLength = svgDefaultProps.beforeSeparatorLength,\n    beforeSeparatorOffset = svgDefaultProps.beforeSeparatorOffset,\n    enableAfterSeparators = svgDefaultProps.enableAfterSeparators,\n    afterSeparatorLength = svgDefaultProps.afterSeparatorLength,\n    afterSeparatorOffset = svgDefaultProps.afterSeparatorOffset,\n    layers = svgDefaultProps.layers,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    currentPartSizeExtension = svgDefaultProps.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerFunnelProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        areaGenerator,\n        borderGenerator,\n        parts,\n        beforeSeparators,\n        afterSeparators,\n        customLayerProps,\n    } = useFunnel<D>({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        direction,\n        interpolation,\n        spacing,\n        shapeBlending,\n        valueFormat,\n        colors,\n        fillOpacity,\n        borderWidth,\n        borderColor,\n        borderOpacity,\n        labelColor,\n        enableBeforeSeparators,\n        beforeSeparatorLength,\n        beforeSeparatorOffset,\n        enableAfterSeparators,\n        afterSeparatorLength,\n        afterSeparatorOffset,\n        isInteractive,\n        currentPartSizeExtension,\n        currentBorderWidth,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const layerById: Record<FunnelLayerId, ReactNode> = {\n        separators: null,\n        parts: null,\n        annotations: null,\n        labels: null,\n    }\n\n    if (layers.includes('separators')) {\n        layerById.separators = (\n            <Separators\n                key=\"separators\"\n                beforeSeparators={beforeSeparators}\n                afterSeparators={afterSeparators}\n            />\n        )\n    }\n\n    if (layers.includes('parts')) {\n        layerById.parts = (\n            <Parts<D>\n                key=\"parts\"\n                parts={parts}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        )\n    }\n\n    if (layers?.includes('annotations')) {\n        layerById.annotations = (\n            <FunnelAnnotations<D> key=\"annotations\" parts={parts} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabel) {\n        layerById.labels = <PartLabels<D> key=\"labels\" parts={parts} />\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Funnel = <D extends FunnelDatum = FunnelDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: FunnelSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerFunnel<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { FunnelDatum, FunnelSvgProps } from './types'\nimport { Funnel } from './Funnel'\n\nexport const ResponsiveFunnel = <D extends FunnelDatum = FunnelDatum>(\n    props: Omit<FunnelSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Funnel<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","p","pointX","pointY","defined","constant","context","curve","curveLinear","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","svgDefaultProps","layers","direction","interpolation","spacing","shapeBlending","colors","scheme","fillOpacity","borderWidth","borderColor","from","borderOpacity","enableLabel","labelColor","theme","enableBeforeSeparators","beforeSeparatorLength","beforeSeparatorOffset","enableAfterSeparators","afterSeparatorLength","afterSeparatorOffset","annotations","isInteractive","currentPartSizeExtension","role","animate","MotionConfigProvider","motionConfig","PartTooltip","part","_jsx","BasicTooltip","id","label","value","formattedValue","color","enableChip","computeShapeGenerators","areaGenerator","area","j","k","x0z","Array","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","curveBasis","computePartsHandlers","parts","setCurrentPartId","onMouseEnter","onMouseLeave","onMouseMove","onClick","showTooltipFromEvent","hideTooltip","tooltip","map","event","createElement","undefined","useFunnel","innerWidth","innerHeight","width","height","defaults","rawShapeBlending","valueFormat","currentBorderWidth","useTheme","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","formatValue","useValueFormatter","useMemo","borderGenerator","paddingBefore","paddingAfter","bandScaleSize","linearScaleSize","bandwidth","bandScale","index","allValues","scaleLinear","domain","max","range","computeScales","linearScale","useState","currentPartId","enhancedParts","datum","partWidth","partHeight","isCurrent","points","areaPoints","borderPoints","forEach","nextPart","push","lastAreaPoint","useTooltip","partsWithHandlers","beforeSeparators","afterSeparators","lastPart","partId","computeSeparators","customLayerProps","Part","useMotionConfig","config","animatedAreaPath","useAnimatedPath","animatedBorderPath","animatedProps","useSpring","areaColor","immediate","_jsxs","animated","stroke","strokeWidth","strokeOpacity","fill","Parts","PartLabel","transform","g","text","textAnchor","dominantBaseline","style","labels","pointerEvents","children","PartLabels","Separator","separator","grid","Separators","FunnelAnnotations","boundAnnotations","useAnnotations","getPosition","getDimensions","size","useFunnelAnnotations","annotation","Annotation","InnerFunnel","partialMargin","margin","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","outerWidth","outerHeight","layerById","separators","includes","SvgWrapper","layer","Fragment","Funnel","renderWrapper","otherProps","Container","ResponsiveFunnel","props","ResponsiveWrapper"],"sourceRoot":""}