{"version":3,"file":"static/js/889.8c904b63.chunk.js","mappings":"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","sources":["../node_modules/@nivo/annotations/src/props.ts","../node_modules/@nivo/annotations/src/utils.ts","../node_modules/@nivo/annotations/src/compute.ts","../node_modules/@nivo/annotations/src/hooks.ts","../node_modules/@nivo/annotations/src/AnnotationNote.tsx","../node_modules/@nivo/annotations/src/AnnotationLink.tsx","../node_modules/@nivo/annotations/src/CircleAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/DotAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/RectAnnotationOutline.tsx","../node_modules/@nivo/annotations/src/Annotation.tsx","../node_modules/@nivo/annotations/src/canvas.ts","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_baseUnset.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_customOmitClone.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_parent.js","../node_modules/lodash/filter.js","../node_modules/lodash/isMap.js","../node_modules/lodash/isNumber.js","../node_modules/lodash/isSet.js","../node_modules/lodash/omit.js"],"sourcesContent":["export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["defaultProps","isCircleAnnotation","annotationSpec","type","isDotAnnotation","isRectAnnotation","computeAnnotation","annotation","computedNoteX","computedNoteY","x","y","noteX","noteY","noteWidth","noteTextOffset","_isNumber","abs","Error","computedX","computedY","angle","sourceX","sourceY","targetX","targetY","Math","atan2","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","size","eighth","round","height","width","textX","noteLineX","points","text","useAnnotations","t","data","annotations","getPosition","getDimensions","useMemo","reduce","acc","offset","_filter","match","map","datum","dimensions","_omit","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","note","theme","useTheme","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","immediate","createElement","_jsxs","outlineWidth","_jsx","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","children","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","link","strokeLinecap","opacity","outlineOpacity","fill","d","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","dotSize","symbol","RectAnnotationOutline","borderRadius","rect","rx","ry","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","forEach","index","moveTo","lineTo","renderAnnotationsToCanvas","length","save","isCanvasNote","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","module","exports","array","iteratee","copyObject","require","keys","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","subValue","add","props","baseEach","collection","predicate","push","isObjectLike","start","end","Array","castPath","last","parent","toKey","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","Object","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","arrayFilter","baseFilter","baseIteratee","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseGetTag","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG"],"sourceRoot":""}